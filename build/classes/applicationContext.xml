<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 引入外部数据库属性文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	<!-- 配置c3p0连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	<!-- 配置hibernate信息 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<!-- 注入连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 配置hibernate其他属性 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.connection.autocommit">false</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		<!-- 配置hibernate映射文件 -->
		<property name="mappingResources">
			<list>
				<value>com/hpe/store/user/vo/User.hbm.xml</value>
				<value>com/hpe/store/category/vo/Category.hbm.xml</value>
				<value>com/hpe/store/product/vo/Product.hbm.xml</value>
				<value>com/hpe/store/categorysecond/vo/CategorySecond.hbm.xml
				</value>
				<value>com/hpe/store/order/vo/Order.hbm.xml</value>
				<value>com/hpe/store/order/vo/OrderItem.hbm.xml</value>
				<value>com/hpe/store/adminuser/vo/AdminUser.hbm.xml</value>
			</list>
		</property>
	</bean>
	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 开启事务注解 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 配置action -->

	<!-- 首页访问的action -->
	<bean id="indexAction" class="com.hpe.store.index.action.IndexAction"
		scope="prototype">
		<property name="categoryService" ref="categoryService"></property>
		<property name="productService" ref="productService" />
	</bean>
	<!-- 用户模块的Action -->
	<bean id="userAction" class="com.hpe.store.user.action.UserAction"
		scope="prototype">
		<property name="userService" ref="userService"></property>
	</bean>
	<bean id="productAction" class="com.hpe.store.product.action.ProductAction">
		<property name="productService" ref="productService"></property>
	</bean>
	<bean id="cartAction" class="com.hpe.store.cart.action.CartAction">
		<property name="productService" ref="productService" />
	</bean>
	<!-- 配置验证码的Action -->
	<bean id="checkImg" class="com.hpe.store.user.action.CheckCodeAction"
		scope="prototype">

	</bean>
	<bean id="orderAction" class="com.hpe.store.order.action.OrderAction"
		scope="prototype">
		<property name="orderService" ref="orderService"></property>
	</bean>

	<!-- 后台管理的action -->
	<bean id="adminUserAction" class="com.hpe.store.adminuser.action.AdminUserAction"
		scope="prototype">
		<property name="adminUserService" ref="adminUserService"></property>
	</bean>

	<!-- 后台查询一级分类的action -->
	<bean id="adminCategoryAction" class="com.hpe.store.category.adminaction.AdminCategoryAction"
		scope="prototype">
		<property name="categoryService" ref="categoryService"></property>
	</bean>

	<!-- 后台商品管理的action -->
	<bean id="adminProductAction" class="com.hpe.store.product.adminaction.AdminProductAction"
		scope="prototype">
		<property name="productService" ref="productService"></property>
		<property name="categorySecondService" ref="categorySecondService"></property>
	</bean>

	<!-- 二级分类的action -->
	<bean id="adminCategorySecondAction"
		class="com.hpe.store.categorysecond.adminaction.AdminCategorySecondAction"
		scope="prototype">
		<property name="categorySecondService" ref="categorySecondService"></property>
		<property name="categoryService" ref="categoryService"></property>
	</bean>

	<!-- 后台订单管理action -->
	<bean id="adminOrderAction" class="com.hpe.store.order.adminaction.AdminOrderAction"
		scope="prototype">
		<property name="orderService" ref="orderService"></property>
	</bean>

	<!-- 配置service -->
	<bean id="userService" class="com.hpe.store.user.service.UserService">
		<property name="userDao" ref="userDao" />
	</bean>
	<bean id="categoryService" class="com.hpe.store.category.service.CategoryService">
		<property name="categoryDao" ref="categoryDao" />
	</bean>
	<bean id="productService" class="com.hpe.store.product.service.ProductService">
		<property name="productDao" ref="productDao"></property>
	</bean>
	<bean id="orderService" class="com.hpe.store.order.service.OrderService">
		<property name="orderDao" ref="orderDao"></property>
	</bean>
	<!-- 后台管理的service -->
	<bean id="adminUserService" class="com.hpe.store.adminuser.service.AdminUserService">
		<property name="adminUserDao" ref="adminUserDao"></property>
	</bean>
	<!-- 二级分类后台管理的service -->
	<bean id="categorySecondService"
		class="com.hpe.store.categorysecond.service.CategorySecondService">
		<property name="categorySecondDao" ref="categorySecondDao"></property>
	</bean>
	<!-- 配置dao -->
	<!-- 配置用户dao -->
	<bean id="userDao" class="com.hpe.store.user.dao.UserDao">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- 配置以及分类dao -->
	<bean id="categoryDao" class="com.hpe.store.category.dao.CategoryDao">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- 配置热门商品dao -->
	<bean id="productDao" class="com.hpe.store.product.dao.ProductDao">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean id="orderDao" class="com.hpe.store.order.dao.OrderDao">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- 后台管理的dao -->
	<bean id="adminUserDao" class="com.hpe.store.adminuser.dao.AdminUserDao">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- 二级分类后台管理dao -->
	<bean id="categorySecondDao" class="com.hpe.store.categorysecond.dao.CategorySecondDao">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- 后台管理用户的action -->
	<bean id="userAdminAction" class="com.hpe.store.user.adminaction.UserAdminAction" scope="prototype">
		<property name="userAdminService" ref="userAdminService"></property>
	</bean>
	<bean id="userAdminService" class="com.hpe.store.user.adminservice.UserAdminService">
		<property name="userAdminDao" ref="userAdminDao"></property>
	</bean>
	<bean id="userAdminDao" class="com.hpe.store.user.admindao.UserAdminDao">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- 配置自定义拦截器，玛德坑了我一周这个地方 -->
	<bean id="privilegeInterceptor" class="com.hpe.store.interceptor.PrivilegeInterceptor"></bean>
</beans>
